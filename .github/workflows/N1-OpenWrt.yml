name: Build OpenWrt for N1

on:
  workflow_dispatch:
   inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'  

      releases_branch:
        description: "Select the releases branch"
        required: false
        default: "openwrt-24.10"
        type: choice
        options:
          - 'openwrt-23.05'
          - 'openwrt-24.10'
          - 'master'
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "6.6.y_6.12.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.1.y_6.6.y
          - 6.6.y_6.12.y
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
    
env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: ${{ inputs.releases_branch }}
  CONFIG_FILE: N1/.config
  DIY_SH: N1/diy.sh
  FILES: N1/files
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}


jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查服务器配置
      run: |
        echo "⚠️ 警告：编译插件需谨慎选择，注意CPU性能"
        echo "推荐避免选择Node.js相关插件"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c)"
        echo "--------------------------内存信息--------------------------"
        sudo lshw -short -C memory | grep GiB
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)"
        df -Th

    - name: 检出代码
      uses: actions/checkout@main

    - name: 清理空间
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
        mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
        libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
        vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: 克隆源代码
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH --single-branch --depth=1 openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: 缓存编译
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: openwrt-${{ env.REPO_BRANCH }}
        prefix: ${{ github.workspace }}/openwrt
        
    - name: 更新并安装feeds
      run: |
        chmod +x $DIY_SH
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        $GITHUB_WORKSPACE/$DIY_SH
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: 加载自定义配置
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: 下载软件包
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译固件
      run: |
        chmod -R 755 openwrt      
        cd openwrt
        make -j$(nproc) || make -j$((`nproc`/2)) || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV

    - name: 打包镜像文件
      if: ${{ env.compile_status }} == 'success' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        KERNEL_REPO_URL: breakingbadboy/OpenWrt
        KERNEL_VERSION_NAME: ${{ inputs.openwrt_kernel }}
        KERNEL_AUTO_LATEST: ${{ inputs.auto_kernel }}
        PACKAGE_SOC: s905d
        GZIP_IMGS: .xz
        WHOAMI: sck03
        OPENWRT_VER: OpenWrt-${{ env.REPO_BRANCH }}-$(date +"%Y.%m.%d")
        SW_FLOWOFFLOAD: 0
        SFE_FLOW: 0

    - name: 生成发布标签
      id: set_release_tag
      if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d")" >> ${GITHUB_OUTPUT}
        touch release.txt
        echo "
        🍁 注意事项：首次使用建议全新刷写
          
        💻 适用机型: 斐讯N1

        🌐 管理地址: 192.168.6.6

        👤 用户名: root

        🔒 密码: password 
        
        " >> release.txt
        echo "tag_status=success" >> $GITHUB_ENV

    - name: 发布固件到 Releases
      uses: softprops/action-gh-release@v2
      if: ${{ env.tag_status == 'success' }} && !cancelled()
      with:
        tag_name: openwrt_${{ steps.set_release_tag.outputs.release_tag }}
        files: ${{ env.PACKAGED_OUTPUTPATH }}/*.img.xz
        body_path: release.txt
        token: ${{ env.GITHUB_TOKEN }}

    - name: 删除运行记录
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1
        token: ${{ env.GITHUB_TOKEN }}

    - name: 删除自动发布的旧固件
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 5
        delete_tags : true
