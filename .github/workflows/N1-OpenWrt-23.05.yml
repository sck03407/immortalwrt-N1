name: Build OpenWrt for N1

on:
  workflow_dispatch:
   inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'  

      releases_branch:
        description: "Select the releases branch"
        required: false
        default: "master"
        type: choice
        options:
          - 'openwrt-23.05'
          - 'openwrt-24.10'
          - 'master'
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.15.y_6.6.y"
        type: choice
        options:
          - 5.4.y
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.1.y_6.6.y
          - 5.15.y_6.6.y
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean

  repository_dispatch:
    types:
      - N1-OpenWrt   
  schedule:
    - cron: "0 0 1 * *"
    
env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: ${{ inputs.releases_branch }}
  CONFIG_FILE: N1/.config
  DIY_SH: N1/diy.sh
  FILES: N1/files
  TZ: Asia/Shanghai
  GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}


jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查服务器配置
      run: |
        echo "⚠️ 警告：编译插件需谨慎选择，注意CPU性能"
        echo "推荐避免选择Node.js相关插件"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c)"
        echo "--------------------------内存信息--------------------------"
        sudo lshw -short -C memory | grep GiB
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)"
        df -Th
        
    - name: 优化磁盘空间
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: 最大化构建空间
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 10240
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-docker-images: 'true'

    - name: 检查磁盘空间
      run: df -hT
        
    - name: 检出代码
      uses: actions/checkout@main
      
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: | 
        sudo -E apt-get -qq update -y
        sudo -E apt-get -qq install -y $(curl -fsSL https://raw.githubusercontent.com/sck03407/immortalwrt-N1/main/ophub-ubuntu2204-make-openwrt-depend)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE
        
    - name: 克隆源代码
      working-directory: ./
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt --depth=1
        
    - name: 缓存编译
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: N1-${{ env.REPO_BRANCH }}
        prefix: ${{ github.workspace }}/openwrt
        
    - name: 更新并安装feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a -f
        ./scripts/feeds install -a -f
        
    - name: 加载自定义配置
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

    - name: 下载软件包
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译固件
      run: |
        cd openwrt
        make -j$(nproc) || make -j$((`nproc`/2)) || make -j1 V=s
        echo "compile_status=success" >> $GITHUB_ENV

    - name: 打包镜像文件
      if: ${{ env.compile_status }} == 'success' && !cancelled()
      uses: unifreq/openwrt_packit@master
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        KERNEL_REPO_URL: breakingbadboy/OpenWrt
        KERNEL_VERSION_NAME: ${{ inputs.openwrt_kernel }}
        KERNEL_AUTO_LATEST: ${{ inputs.auto_kernel }}
        PACKAGE_SOC: s905d
        GZIP_IMGS: .xz
        WHOAMI: sck03
        OPENWRT_VER: $(date +"%Y.%m.%d")
        SW_FLOWOFFLOAD: 0
        SFE_FLOW: 0

    - name: 生成发布标签
      if: ${{ env.PACKAGED_STATUS == 'success' }} && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H.%M")" >> ${GITHUB_OUTPUT}
        touch release.txt
        echo "
        🍁 注意事项：首次使用建议全新刷写
          
        💻 适用机型: 斐讯N1

        📂 源码: ${{ env.REPO_URL }}

        🌳 分支: ${{ env.REPO_BRANCH }}

        ⏱️ 编译时间: $(date +"%Y年%m月%d日%H时%M分")

        🌐 管理地址: 192.168.6.6

        👤 用户名: root

        🔒 密码: password 
        
        " >> release.txt
        echo "tag_status=success" >> $GITHUB_ENV

    - name: 发布固件到 Releases
      uses: softprops/action-gh-release@v2
      if: ${{ env.tag_status == 'success' }} && !cancelled()
      with:
        tag_name: openwrt-24.10_${{ env.PACKAGED_OUTPUTDATE }}
        files: ${{ env.PACKAGED_OUTPUTPATH }}/*.img.xz
        body_path: release.txt
        token: ${{ env.GITHUB_TOKEN }}

    - name: 删除运行记录
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 1
        token: ${{ env.GITHUB_TOKEN }}

    - name: 删除自动发布的旧固件
      uses: dev-drprasad/delete-older-releases@master
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 5
        delete_tags : true
